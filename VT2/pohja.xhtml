<!DOCTYPE html>
<html lang="fi" xmlns="http://www.w3.org/1999/xhtml" xml:lang="fi">
    <head>
        <script src="https://appro.mit.jyu.fi/tiea2120/vt/vt1/2020/data.js"></script>
        <script src="vt2.js"></script>
        <link rel="StyleSheet" href="tyylit.css" type="text/css" />
        <meta charset="utf-8"/>
        <title>Tulospalvelu</title>
    </head>
    <body>

<!-- Tämän tiedoston sisältöä ei saa muuttaa kuin ohjelmallisesti! -->

<h1>Tulospalvelu</h1>

<div id="tupa">
<!--
Tähän tulee taulukko sarjoista ja joukkueista. Taulukon runko on luotu jo
valmiiksi -->
<table>
<caption>Tulokset</caption>
<tr><th>Sarja</th><th>Joukkue</th><th>Pisteet</th></tr>
</table>
<!--
Kolmostasolla listausta laajennetaan joukkueen jäsenten nimillä ja joukkueen 
pisteillä.

Tulokset ovat oletuksena sarjoittain pistejärjestyksessä eniten pisteitä saanut 
joukkue ensimmäisenä.

Joukkueiden nimistä tehdään linkkejä, jotka vievät joukkuelomakkeeseen. 
Lomakkeeseen tulevat muokattavaksi klikatun joukkueen tiedot.

<table>
<caption>Tulokset</caption>
<tr><th>Sarja</th><th>Joukkue</th><th>Pisteet</th></tr>
<tr><td>2h</td><td><a href="#joukkue">Porukka</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td>    <td>138</td></tr>
<tr><td>2h</td><td><a href="#joukkue">Sakki</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td>       <td>55</td></tr>
<tr><td>4h</td><td><a href="#joukkue">Joku joukkue</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td><td>30</td></tr>
<tr><td>4h</td><td><a href="#joukkue">Ryhmä</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td>        <td>0</td></tr>
<tr><td>8h</td><td><a href="#joukkue">Porukka 2</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td>    <td>238</td></tr>
<tr><td>8h</td><td><a href="#joukkue">Sakki 2</a> <br />Etunimi1 Sukunimi1, Etunimi2 Sukunimi2,...</td>       <td>153</td></tr>


-->
</div>

        <h2>Lisää rasti</h2>
        <!--

Täydennä tähän seuraavanlainen lomake jolla voit lisätä uuden rastin. Jos kaikkia 
tietoja ei ole täytetty niin lisäystä ei tehdä.

<form id="rastilomake" action="foobar.ei.toimi.example" method="post">
    <fieldset>
        <legend>Rastin tiedot</legend>
        <p><label>Lat <input type="text" value="" /></label></p>
        <p><label>Lon <input type="text" value="" /></label></p>
        <p><label>Koodi <input type="text" value="" /></label></p>
        <p><button name="rasti" id="rasti">Lisää rasti</button></p>
    </fieldset>
</form>
-->

<form id="rastilomake" action="foobar.ei.toimi.example" method="post">
    <fieldset>
        <legend>Rastin tiedot</legend>
        <p><label>Lat </label></p>
        <p><label><input type="text" value="" /></label></p>
        <p></p>
        <p><button name="rasti" id="rasti">Lisää rasti</button></p>
    </fieldset>
</form>


<h2>Joukkue</h2>
        <!--
Kolmostasolla täydennä tähän lomake jolla voi lisätä uuden joukkueen tai muokata
jo olemassa olevan joukkueen tietoja. 

Joukkueelta kysytään nimi ja lista jäsenistä. 

Jäseniä voi syöttää n kappaletta. Jäseniä on aina syötettävä vähintään
kaksi kappaletta eli alussa on oltava kentät kahden jäsenen nimille. 

Uusia syöttökenttiä luodaan tarpeen mukaan. 

Jos kaikki pyydettyjä tietoja (joukkueen nimi ja väh. kaksi jäsentä ) ei ole
syötetty niin lisäystä ei tehdä. 

Lisää joukkue -painike on disabloituna kunnes pakolliset tiedot on syötetty.

Onnistuneen lisäämisen jälkeen lomakkeen kenttien sisältö tyhjennetään.

Näytä lomakkeella vain jompikumpi painikkeista: 
  - Näytä "Lisää joukkue"-painike silloin, kun ollaan lisäämässä uutta joukkuetta
  - Näytä "Tallenna muutokset"-painike silloin, kun ollaan muokkaamassa olemassa olevan joukkueen tietoja

<form id="joukkue" action="foobar.ei.toimi.example" method="post">
    <fieldset>
        <legend>Uusi joukkue</legend>
        <p><label>Nimi <input type="text" value="" /></label></p>
        <fieldset>
            <legend>Jäsenet</legend>
            <p><label>Jäsen 1 <input type="text" value="" /></label></p>
            <p><label>Jäsen 2 <input type="text" value="" /></label></p>
            ...
        </fieldset>
        <p><button name="joukkue" id="lisaa">Lisää joukkue</button></p>
        <p><button name="muokkaa" id="muokkaa">Tallenna muutokset</button></p>
    </fieldset>
</form>

Uusi joukkue on lisättävä myös sivulla näkyvään joukkuelistaukseen oikealle 
paikalle. 

Oletuksena joukkueen pisteet ovat 0, kuljettu matka on 0 km ja käyttämä aika on 
00:00:00.
-->
<form id="joukkue" action="foobar.ei.toimi.example" method="post">
    <fieldset>
        <legend>Uusi joukkue</legend>
        <p><label>Nimi <input type="text" value="" /></label></p>
        <p><button name="joukkue">Lisää joukkue</button></p>
        <p><button name="muokkaa">Tallenna muutokset</button></p>
    </fieldset>
</form>

<!--
Viitostasolla lisää saman lomakkeen yhteyteen listaus joukkueen rastileimauksista. 

Mahdollista leimausten täydellinen muokkaaminen eli leimauksen voi kokonaan 
poistaa tai vaihtaa leimattua rastia tai leimauksen kellonaikaa. 

Joukkueelle voi myös lisätä uusia leimauksia. 

Rasti valitaan alasvetovalikosta. 

Jos joukkueen leimauksiin tehdään muutoksia niin myös tuloslistaus täytyy 
päivittää.

-->

      

<!-- Tästä eteenpäin on vain apuvälineenä käytettäviä skriptejä -->
<!-- HTMLinspectoria käytetään sivun live-muutosten validointiin. Kannattaa
vielä varmuuden vuoksi ajaa välillä myös W3C:n validaattori -->
<script src="https://appro.mit.jyu.fi/tools/htmlinspector/html-inspector.js"></script>
<!-- Sivun validoinnin W3C:n validaattorilla voit tehdä milloin tahansa näppäinyhdistelmällä CTRL+ALT+V -->
<script src="https://appro.mit.jyu.fi/tools/validator/validator.user.js"></script>
<script src="https://appro.mit.jyu.fi/tools/jshint/jshint.js"></script>
<script src="https://appro.mit.jyu.fi/tools/jshint/jshint.user.js"></script>
<script>
//<![CDATA[
// seurataan DOM-puuhun tehtyjä muutoksia. Validoidaan dokumentti, jos DOM-puuta
// muutetaan. Tämä hidastaa merkittävästi sovellusta, mutta auttaa bongaamaan
// epävalidit muutokset sivun rakenteeseen
// kts. https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver
function observe() {
	// asetukset
	const config = { attributes: true, childList: true, subtree: true };
        // ajastuksen apumuuttuja
        let timer = true;

	// seuraava funktio suoritetaan, jos dokumentin sisältö muuttuu
        function validointi() {
		HTMLInspector.inspect( {
        		domRoot: "html",
        		useRules: null,
       			 excludeRules: ["script-placement"],
        		excludeElements: "svg",
        		excludeSubTrees: ["svg","iframe"],
        		onComplete: function(errors) {
                		errors.forEach(function(error) {
                        	console.warn(error.message, error.context);
                		});

		        }
        	} );

                timer = true;
        }

	// muutosten seuranta
	const callback = function(mutationsList, observer) {
	    for(let mutation of mutationsList) {
	        if (timer && ( mutation.type === 'childList' || mutation.type === 'attributes') ) {
		  // emme halua suorittaa validointia jokaisen pienen muutoksen
		  // jälkeen joten ajetaan validointia viivästettynä, jotta mahdollisia
		  // muutoksia ehtii tulla enemmän kerralla
		    window.setTimeout(  validointi, 500 );
                    timer = false;
//	            console.log(mutation);
	        }
	    }
	};

	// luodaan varsinainen tapahtumankuuntelija 
	const observer = new MutationObserver(callback);

	// aktivoidaan kuuntelija dokumentin body-elementille
	observer.observe(document.body, config);
}
window.addEventListener("load", observe);
//]]>

</script>
</body>
</html>
